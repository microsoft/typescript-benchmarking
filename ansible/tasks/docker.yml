---
# Loosely based on: https://blog.ianpreston.ca/posts/2023-06-04-rootless-docker.html

- name: Add docker gpg key
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: '/etc/apt/keyrings/docker.gpg'
  become: yes

- name: Add docker repository to apt
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
    state: present
  become: yes

- name: Add gvisor gpg key
  ansible.builtin.shell: |
    curl -fsSL https://gvisor.dev/archive.key | gpg --dearmor -o /usr/share/keyrings/gvisor-archive-keyring.gpg
  args:
    creates: '/usr/share/keyrings/gvisor-archive-keyring.gpg'
  become: yes

- name: Add gvisor repository to apt
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64 signed-by=/usr/share/keyrings/gvisor-archive-keyring.gpg] https://storage.googleapis.com/gvisor/releases release main'
    state: present
  become: yes

- name: Install docker
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - uidmap
      - runsc
  become: yes

- name: Stop and disable docker
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: stopped
    enabled: false
  with_items:
    - 'containerd.service'
    - 'docker.service'
    - 'docker.socket'
  become: yes

- name: Turn on linger
  ansible.builtin.shell: 'loginctl enable-linger {{ agent_user }}'
  args:
    creates: '/var/lib/systemd/linger/{{ agent_user }}'
  become: yes
  register: linger
  when: install_agent

- name: Reboot if linger changed
  when: install_agent and linger.changed
  ansible.builtin.shell: touch /var/run/reboot-required
  become: yes

- name: Create .config/docker directory
  ansible.builtin.file:
    path: '{{ agent_home }}/.config/docker'
    state: directory
    mode: '0755'
    owner: '{{ agent_user }}'
    group: '{{ agent_user }}'
  become: yes
  when: install_agent

- name: Create docker daemon config
  ansible.builtin.copy:
    dest: '{{ agent_home }}/.config/docker/daemon.json'
    owner: '{{ agent_user }}'
    group: '{{ agent_user }}'
    content: |
      {
        "runtimes": {
          "runsc-rootless": {
            "path": "/usr/bin/runsc",
            "runtimeArgs": ["--network", "host", "--ignore-cgroups"]
          }
        }
      }
  become: yes
  when: install_agent

- name: Run the rootless docker installer
  ansible.builtin.shell: |
    export XDG_RUNTIME_DIR="/run/user/$(id -u)" && \
    export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus" && \
    dockerd-rootless-setuptool.sh install
  become: true
  become_user: '{{ agent_user }}'
  when: install_agent
  register: docker_install

# This is not necessary as the above enables the service, but it's good to know when the above failed.
- name: Enable user docker
  ansible.builtin.systemd:
    name: 'docker.service'
    state: started
    enabled: true
    scope: user
  become: yes
  become_user: '{{ agent_user }}'
  when: install_agent
