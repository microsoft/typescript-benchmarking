name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

# Ensure scripts are run with pipefail. See:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 18

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          run_install: true

      - run: pnpm build

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 18

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          run_install: true

      - run: pnpm test

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 18

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          run_install: true

      - run: pnpm eslint .

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 18

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          run_install: true

      - run: pnpm dprint check

  scenarios-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - id: matrix
        run: |
          MATRIX=$(for script in cases/scenarios/*/setup.sh; do echo $(basename $(dirname $script)); done | jq -rnR '{ include: [inputs | select(length>0) | { scenario: . }] } | tostring')
          echo $MATRIX
          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"

  scenarios:
    needs: scenarios-matrix

    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.scenarios-matrix.outputs.matrix) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 18

      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          run_install: true

      - run: |
          set -x

          sudo apt-get update && \
          sudo apt-get install -y \
              apt-transport-https \
              ca-certificates \
              curl \
              gnupg

          curl -fsSL https://gvisor.dev/archive.key | sudo gpg --dearmor -o /usr/share/keyrings/gvisor-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/gvisor-archive-keyring.gpg] https://storage.googleapis.com/gvisor/releases release main" | sudo tee /etc/apt/sources.list.d/gvisor.list > /dev/null

          sudo apt-get update && sudo apt-get install -y runsc
        name: Install gVisor

      - run: bash cases/scenarios/${{ matrix.scenario }}/setup.sh

  required:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - build
      - test
      - lint
      - format
      - scenarios

    steps:
      - name: Check required jobs
        run: |
          results=(
            "${{ needs.build.result }}"
            "${{ needs.test.result }}"
            "${{ needs.lint.result }}"
            "${{ needs.format.result }}"
            "${{ needs.scenarios.result }}"
          )

          for result in "${results[@]}"; do
            if [[ "$result" != "success" ]]; then
              echo "One or more jobs failed"
              exit 1
            fi
          done
